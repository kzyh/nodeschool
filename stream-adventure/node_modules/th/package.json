{
  "_args": [
    [
      {
        "raw": "th",
        "scope": null,
        "escapedName": "th",
        "name": "th",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/KevinHong/Code/Projects/nodeschool/stream-adventure"
    ]
  ],
  "_from": "th@latest",
  "_id": "th@0.1.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/th",
  "_npmUser": {
    "name": "jden",
    "email": "jason@denizac.org"
  },
  "_npmVersion": "1.3.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "th",
    "scope": null,
    "escapedName": "th",
    "name": "th",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/th/-/th-0.1.1.tgz",
  "_shasum": "6146a024ff311b740d2fe25a275fbbbfe27c6182",
  "_shrinkwrap": null,
  "_spec": "th",
  "_where": "/Users/KevinHong/Code/Projects/nodeschool/stream-adventure",
  "author": {
    "name": "AgileMD",
    "email": "hello@agilemd.com"
  },
  "bugs": {
    "url": "https://github.com/agilemd/then/issues"
  },
  "contributors": [
    {
      "name": "jden",
      "email": "jason@denizac.org"
    }
  ],
  "dependencies": {
    "q": "~0.9.6"
  },
  "description": "th.en - make it painless to adapt between callbacks and promises",
  "devDependencies": {
    "chai": "~1.6.0",
    "mocha": "~1.9.0"
  },
  "directories": {},
  "dist": {
    "shasum": "6146a024ff311b740d2fe25a275fbbbfe27c6182",
    "tarball": "https://registry.npmjs.org/th/-/th-0.1.1.tgz"
  },
  "homepage": "https://github.com/agilemd/then#readme",
  "keywords": [
    "promises"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jden",
      "email": "jason@denizac.org"
    }
  ],
  "name": "th",
  "optionalDependencies": {},
  "readme": "# then\nmake it painless to adapt between callbacks and promises\n\n## usage\n\n`then` is like a magic portal to warp between Promised land and the firey depths of Callback hell.\n\n\n```js\nvar then = require('th')\nvar fs = require('fs')\n\nfs.readFile('./tmp', then())\nthen(function (file) {\n  console.log('file')\n}, function (err) {\n  console.log('errors!', err)\n})\n\n// although you may want to be using streaming file methods, anyhow\n\n```\n\nWhen we invoke `then()` the first time, it creates a callback to give to `fs.readFile`. When we call it the next time, it's like a Promises/A+ `then` method.\n\nImportantly, there are times when we want to go back from a chain of promises to a callback:\n\n```js\nfunction (err, nextCb) {\n  if (err) { return nextCb(err) }\n  var promise = myPromise()\n    .then(someStep)\n    .then(oneMoreThing)\n\n  then.callback(promise, nextCb)\n}\n```\n\n\n## api\n\n### `then : () => Promise | (resolved: Function, rejected: Function) => Promise`\nSee usage note above for behavior.\n\n### `then.callback(Promise<T>, Callback<T>) => void`\nRegisters the `callback` as a handler for promise `resolve` and `reject` events.\n\n\n## installation\n\n    $ npm install th\n\n\n## running the tests\n\nFrom package root:\n\n    $ npm install\n    $ npm test\n\n\n## contributors\n\n- jden <jason@denizac.org>\n\n\n## license\nMIT. (c) MMXIII AgileMD http://agilemd.com\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/agilemd/then.git"
  },
  "scripts": {
    "test": "node node_modules/mocha/bin/mocha"
  },
  "version": "0.1.1"
}
